## Settings

```{r on_off_settings}
#| echo: false
#| eval: true

gencode_metadata <- 
  cps_report$settings$reference_data$source_metadata |>
  dplyr::filter(source_abbreviation == "gencode")

transcript_set_gencode <- paste0("GENCODE - basic set (v", gencode_metadata$source_version, ")")
if (as.logical(cps_report[["settings"]][["conf"]][["vep"]][["vep_gencode_basic"]]) == F) {
  transcript_set_gencode <- paste0("GENCODE - all transcripts (v", gencode_metadata$source_version, ")")
}
```

* Sample name &nbsp;:&nbsp; <span style="background-color:#007a74; font-size:1.2em; color:white"><b>&nbsp;&nbsp;`r cps_report[['settings']][['sample_id']]`&nbsp;&nbsp;</b></span>
<br>

### Report configuration 

The report is generated with _[cpsr](https://github.com/sigven/cpsr)_ version `r cps_report[['settings']][['software']][['cpsr_version']]`, ( _[pcgr](https://github.com/sigven/pcgr)_ version `r cps_report[['settings']][['software']][['pcgr_version']]`), using the following key settings:

* Genome assembly: __`r cps_report[['settings']][['genome_assembly']]`__
* Report settings
  * R Markdown theme (Bootstrap): __`r cps_report[['settings']][['conf']][['visual_reporting']][['visual_theme']]`__
  * Datatable display: __`r cps_report[['settings']][['conf']][['visual_reporting']][['table_display']]`__
  * Non-floating TOC: __`r as.logical(cps_report[['settings']][['conf']][['visual_reporting']][['nonfloating_toc']])`__
* Control population gnomAD: __`r cps_report[['settings']][['conf']][['variant_classification']][['popdesc_gnomad']]`__
* Upper MAF threshold (gnomAD) for unclassified variants included in report:  __`r cps_report[['settings']][['conf']][['variant_classification']][['maf_upper_threshold']]`__
* Ignore non-proteincoding variants in report: __`r !as.logical(cps_report[['settings']][['conf']][['other']][['show_noncoding']])`__
* Generate CPSR variant classifications also for existing ClinVar variants: __`r as.logical(cps_report[['settings']][['conf']][['variant_classification']][['classify_all']])`__
* Report ClinVar variants in target genes if they are only associated with non-cancer phenotypes/diseases: 
__`r as.logical(cps_report[['settings']][['conf']][['variant_classification']][['clinvar_report_noncancer']])`__
* Include [secondary findings](https://www.ncbi.nlm.nih.gov/clinvar/docs/acmg/) in report: __`r as.logical(cps_report[['settings']][['conf']][['variant_classification']][['secondary_findings']])`__
* Include GWAS hits in report: __`r as.logical(cps_report[['settings']][['conf']][['variant_classification']][['gwas_findings']])`__
* Variant Effect Predictor (VEP) settings:
  * Transcript set: __`r transcript_set_gencode`__
  * Transcript pick order: __`r cps_report[['settings']][['conf']][['vep']][['vep_pick_order']]`__
  * Regulatory regions annotation: __`r as.logical(cps_report[['settings']][['conf']][['vep']][['vep_regulatory']])`__
