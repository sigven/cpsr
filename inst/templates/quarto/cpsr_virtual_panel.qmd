<br><br>

### Virtual gene panel


```{r prepare_panel_url}
#| echo: false
#| results: asis

panel_link <- cps_report[['settings']][['conf']][['gene_panel']][['description']]
if(cps_report[['settings']][['conf']][['gene_panel']][['panel_id']] != "-1" &
   !stringr::str_detect(cps_report[['settings']][['conf']][['gene_panel']][['url']], ",")){
  description <- cps_report[['settings']][['conf']][['gene_panel']][['description']]
  description_trait <- 
    cps_report[['settings']][['conf']][['gene_panel']][['description_trait']]
  url_raw <- cps_report[['settings']][['conf']][['gene_panel']][['url']]
  description_full <- paste0(description,': ', description_trait)
  if(cps_report[['settings']][['conf']][['gene_panel']][['panel_id']] == "0"){
    description_full <- description
  }
  panel_link <- paste0("<a href='", url_raw, "' target='_blank'>", 
                       description_full, 
                       "</a>")
}

```


Variants reported for the sample are limited to the tile of cancer predisposition genes
shown below. 

   *  __`r panel_link`__
      * Diagnostic-grade genes only (applicable to Genomics England panels): __`r as.logical(cps_report[['settings']][['conf']][['gene_panel']][['diagnostic_grade_only']])`__
   
```{r gene_selection, echo = F, eval = T}
tiles_html <- cpsr::plot_virtual_panels(
  gene_df = cps_report[["settings"]][["conf"]][["gene_panel"]][["panel_genes"]])
```

`r tiles_html`

<br>

::: {.callout-note}
## Note - input data and virtual panel

For the sample in question, `r cps_report$settings$sample_id`, CPSR does **not** perform any interrogation of _which genes that were subject to sequencing_. CPSR classifies only input variants (i.e. as found in the query VCF) within the user-defined __virtual__ gene panel.
:::

<br>
