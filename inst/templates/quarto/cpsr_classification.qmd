
## Variant classification

```{r prepare_classified_variant_data}
#| echo: false
#| output: asis
#| eval: true

dtable_pageLength <- 6
dt_max_rows <- 500
dtable_scrollY <- "700px"

show_class_filters <- list()
missing_class_items <- list()
tot_variants <- list()
#disp <- list()
callset_cpg <- 
  cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf
for (c in c("class1", "class2", "class3", "class4", "class5")) {
  path_level <- "VUS"
  if(c == "class1"){
    path_level = "Benign"
  }
  if(c == "class2"){
    path_level = "Likely_Benign"
  }
  if(c == "class4"){
    path_level = "Likely_Pathogenic"
  }
  if(c == "class5"){
    path_level = "Pathogenic"
  }
  show_class_filters[[c]] <- list()
  missing_class_items[[c]] <- list()
  tot_variants[[c]] <- list()
  for (m in c("CPSR_ACMG", "ClinVar")) {
    tot_variants[[c]][[m]] <- 0
    show_class_filters[[c]][[m]] <- F
    missing_class_items[[c]][[m]] <- T
    if(NROW(callset_cpg) > 0){
      if (NROW(callset_cpg[callset_cpg$CPSR_CLASSIFICATION_SOURCE == m & 
                           callset_cpg$FINAL_CLASSIFICATION == path_level,]) > 0) {
        tot_variants[[c]][[m]] <- 
          NROW(callset_cpg[callset_cpg$CPSR_CLASSIFICATION_SOURCE == m & 
                           callset_cpg$FINAL_CLASSIFICATION == path_level,])
      }
      if (tot_variants[[c]][[m]] > 0) {
        show_class_filters[[c]][[m]] <- T
        missing_class_items[[c]][[m]] <- F
      }
    }
  }
}

if(NROW(cps_report$content$snv_indel$variant_display$cpg_non_sf) > 0){
  cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf <- 
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf |>
    dplyr::mutate(
      CONSEQUENCE = stringr::str_replace_all(CONSEQUENCE,"&", ", ")) |>
    dplyr::mutate(
      CDS_CHANGE = stringr::str_replace_all(CDS_CHANGE,"&", ", "))
}
  
tag_gnomad <- 
  cps_report[["settings"]][["conf"]][["variant_classification"]][["vcftag_gnomad_AF"]]
desc_gnomad <- 
  cps_report[["settings"]][["conf"]][["variant_classification"]][["popdesc_gnomad"]]
formula_gnomad <- as.formula(paste0("~", rlang::sym(tag_gnomad)))
```

<br>

::: {.panel-tabset}

<br>

### Pathogenic

   *  A total of __N = `r tot_variants[['class5']][['ClinVar']]`__ variants are registered with a <i>Pathogenic</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
   *  A total of __N = `r tot_variants[['class5']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>Pathogenic</i> clinical significance by CPSR (refined ACMG/AMP criteria - based on population frequency and variant effect).

::: {.callout-note title="Note - output limitations" collapse="true"}

In order to maintain responsiveness of client-side data interaction, variants displayed here constitute the top `r dt_max_rows` variants for each of the ClinVar and non-ClinVar variant sets.

:::

<br>

::: {.panel-tabset}

```{r active_tab_class5}
#| echo: false
#| output: asis

if (missing_class_items[["class5"]][["ClinVar"]] == F | 
    (missing_class_items[["class5"]][["CPSR_ACMG"]] == T & 
     missing_class_items[["class5"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```


```{r class5_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class5']][['ClinVar']] == TRUE

cat("\n")
htmltools::br()


variants_class5_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "Pathogenic") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class5_1 <- crosstalk::SharedData$new(variants_class5_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class5_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class5_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class5_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class5_1, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class5_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class5_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class5_1, ~CLINVAR_CONFLICTED),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class5_1, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class5_1,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[1],
        "', 'color': '#fff'});"),
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class5}
#| echo: false
#| output: asis

if (missing_class_items[["class5"]][["ClinVar"]] == T & 
    missing_class_items[["class5"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```


```{r class5_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class5']][['CPSR_ACMG']] == TRUE

variants_class5_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "Pathogenic") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )


variants_class5_2 <- crosstalk::SharedData$new(variants_class5_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class5_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class5_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class5_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class5_2, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG/AMP criteria codes)", variants_class5_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class5_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class5_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class5_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    # scrollY = dtable_scrollY,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[1],
        "', 'color': '#fff'});"),
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

:::

### Likely Pathogenic

*  A total of __N = `r tot_variants[['class4']][['ClinVar']]`__ variants are recorded with a <i>Likely Pathogenic</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
*  A total of __N = `r tot_variants[['class4']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>Likely Pathogenic</i> clinical significance by CPSR (refined ACMG/AMP criteria - based on population frequency and variant effect).

::: {.callout-note title="Note - output limitations" collapse="true"}

In order to maintain responsiveness of client-side data interaction, variants displayed here constitute the top `r dt_max_rows` variants for each of the ClinVar and non-ClinVar variant sets.

:::

<br>

::: {.panel-tabset}

```{r active_tab_class4}
#| echo: false
#| output: asis

if (missing_class_items[["class4"]][["ClinVar"]] == F | 
    (missing_class_items[["class4"]][["CPSR_ACMG"]] == T & 
     missing_class_items[["class4"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```

```{r class4_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class4']][['ClinVar']] == TRUE

cat("\n")
htmltools::br()

variants_class4_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "Likely_Pathogenic") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", 
        "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", 
        "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class4_1 <- crosstalk::SharedData$new(variants_class4_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class4_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class4_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class4_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class4_1, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class4_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class4_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class4_1, ~CLINVAR_CONFLICTED),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class4_1, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class4_1,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    # scrollY = dtable_scrollY,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[2],
        "', 'color': '#fff'});"),
      "}"
    )
  )
)
htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class4}
#| echo: false
#| output: asis

if (missing_class_items[["class4"]][["ClinVar"]] == T & 
    missing_class_items[["class4"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```



```{r vus_caution_note}
#| echo: false
#| output: asis
#| include: !expr show_class_filters[['class4']][['CPSR_ACMG']] == TRUE

htmltools::br()

cat('\n::: {.callout-important}\nNovel variants with a CPSR pathogenicity score of 2.0 (minimum score for likely pathogenic in CPSR) represent a challenging collection of variants. Based on calibration of CPSR score thresholds with high-confident ClinVar variants, we discovered that many of these are classified as VUS in ClinVar. Specifically, we observe many splice donor region variants (+3,+4,+5) that are predicted to affect the splice site and thus classified as likely pathogenic by CPSR. We also find a large number of missense variants (with insilico predictions for damaging effects) that occur in genes with low rates of benign missense variants. In any case, we still recommend that these variants should be prioritized for careful examination, and any such cases are <mark style="background-color:#ff7518; font-weight:bold; color:black">conveniently higlighted</mark> in the table below.\n\n:::')

htmltools::br()
```


```{r class4_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class4']][['CPSR_ACMG']] == TRUE

cat("\n")
htmltools::br()

variants_class4_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "Likely_Pathogenic") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )

variants_class4_2 <- crosstalk::SharedData$new(variants_class4_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class4_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class4_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class4_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class4_2, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG/AMP criteria codes)", variants_class4_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class4_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class4_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class4_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[2],
        "', 'color': '#fff'});"),
      "}"
    )
  )
) |>
  DT::formatStyle(
    color = "black",
    columns = "SYMBOL",
    valueColumns = "CPSR_PATHOGENICITY_SCORE",
    backgroundColor = DT::styleEqual(
      c(2.0, 2.5, 3.0, 3.5, 4.0),
      c("#ff7518","#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF" )
    )
  )

htmltools::br()
htmltools::br()
htmltools::br()
```

:::

### Variants of Uncertain Significance (VUS)</b>

*  A total of __N = `r tot_variants[['class3']][['ClinVar']]`__ variants are recorded with a <i>VUS</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
*  A total of __N = `r tot_variants[['class3']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>VUS</i> clinical significance by CPSR (refined ACMG/AMP criteria - based on population frequency and variant effect).

::: {.callout-note title="Note - output limitations" collapse="true"}

In order to maintain responsiveness of client-side data interaction, variants displayed here constitute the top `r dt_max_rows` variants for each of the ClinVar and non-ClinVar variant sets.

:::

<br>

::: {.panel-tabset}

```{r active_tab_class3}
#| echo: false
#| output: asis

if (missing_class_items[["class3"]][["ClinVar"]] == F | 
    (missing_class_items[["class3"]][["CPSR_ACMG"]] == T & 
     missing_class_items[["class3"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```

```{r class3_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class3']][['ClinVar']] == TRUE

cat("\n")
htmltools::br()

variants_class3_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "VUS") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class3_1 <- crosstalk::SharedData$new(variants_class3_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class3_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class3_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class3_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class3_1, ~SYMBOL),
    crosstalk::filter_slider("GERP_SCORE", "Genomic conservation score (GERP)", 
                             variants_class3_1, ~GERP_SCORE,
      min = -12.3, max = 6.17, ticks = T
    ),
    crosstalk::filter_slider(
      tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), 
      variants_class3_1, formula_gnomad, sep = "", ticks = F)
  ),
  list(
    crosstalk::filter_select("miRNA_TARGET_HIT", "miRNA target gain/loss", variants_class3_1, ~miRNA_TARGET_HIT),
    crosstalk::filter_select("TF_BINDING_SITE_VARIANT", "TF binding site alteration", variants_class3_1, ~TF_BINDING_SITE_VARIANT),
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class3_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class3_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class3_1, ~CLINVAR_CONFLICTED)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class3_1,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[3],
        "', 'color': '#fff'});"),
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class3}
#| echo: false
#| output: asis

if (missing_class_items[["class3"]][["ClinVar"]] == T & missing_class_items[["class3"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```


```{r class3_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class3']][['CPSR_ACMG']]

cat("\n")
htmltools::br()

variants_class3_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "VUS") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )

variants_class3_2 <- crosstalk::SharedData$new(variants_class3_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class3_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class3_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class3_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class3_2, ~SYMBOL),
    crosstalk::filter_slider("GERP_SCORE", "Genomic conservation score (GERP)", variants_class3_2, ~GERP_SCORE,
      min = -12.3, max = 6.17, ticks = T
    )
  ),
  list(
    crosstalk::filter_select("miRNA_TARGET_HIT", "miRNA target gain/loss", variants_class3_2, ~miRNA_TARGET_HIT),
    crosstalk::filter_select("TF_BINDING_SITE_VARIANT", "TF binding site alteration", variants_class3_2, ~TF_BINDING_SITE_VARIANT),
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG/AMP criteria codes)", variants_class3_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class3_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class3_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class3_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[3],
        "', 'color': '#fff'});"),
      "}"
    )
  )
) |>
  DT::formatStyle(
    color = "black",
    columns = "SYMBOL",
    valueColumns = "CPSR_PATHOGENICITY_SCORE",
    backgroundColor = DT::styleEqual(
      c(-1.0, -0.5, 0, 0.5, 1.0, 1.5, 2.0),
      c("#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#ff7518")
    )
  )

htmltools::br()
htmltools::br()
htmltools::br()
```

:::

### Likely Benign

*  A total of __N = `r tot_variants[['class2']][['ClinVar']]`__ variants are recorded with a <i>Likely Benign</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
*  A total of __N = `r tot_variants[['class2']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>Likely Benign</i> clinical significance by CPSR (refined ACMG/AMP criteria - based on population frequency and variant effect).

::: {.callout-note title="Note - output limitations" collapse="true"}

In order to maintain responsiveness of client-side data interaction, variants displayed here constitute the top `r dt_max_rows` variants for each of the ClinVar and non-ClinVar variant sets.

:::

<br>

::: {.panel-tabset}


```{r active_tab_class2}
#| echo: false
#| output: asis

if (missing_class_items[["class2"]][["ClinVar"]] == F | 
    (missing_class_items[["class2"]][["CPSR_ACMG"]] == T &
     missing_class_items[["class2"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```

```{r class2_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class2']][['ClinVar']] == TRUE

cat("\n")
htmltools::br()

variants_class2_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "Likely_Benign") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", 
        "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", 
        "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class2_1 <- crosstalk::SharedData$new(variants_class2_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class2_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class2_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class2_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class2_1, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class2_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class2_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class2_1, ~CLINVAR_CONFLICTED),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class2_1, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class2_1,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[4],
        "', 'color': '#fff'});"),
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class2}
#| echo: false
#| output: asis

if (missing_class_items[["class2"]][["ClinVar"]] == T & 
    missing_class_items[["class2"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```

```{r class2_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class2']][['CPSR_ACMG']] == TRUE

cat("\n")
htmltools::br()

variants_class2_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "Likely_Benign") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )

variants_class2_2 <- crosstalk::SharedData$new(
  variants_class2_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class2_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class2_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class2_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class2_2, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG/AMP criteria codes)", variants_class2_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class2_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class2_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class2_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[4],
        "', 'color': '#fff'});"),
      "}"
    )
  )
)
htmltools::br()
htmltools::br()
htmltools::br()
```

:::

### Benign

*  A total of __N = `r tot_variants[['class1']][['ClinVar']]`__ variants are recorded with a <i>Benign</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
*  A total of __N = `r tot_variants[['class1']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>Benign</i> clinical significance by CPSR (refined ACMG/AMP criteria - based on population frequency and variant effect).

::: {.callout-note title="Note - output limitations" collapse="true"}

In order to maintain responsiveness of client-side data interaction, variants displayed here constitute the top `r dt_max_rows` variants for each of the ClinVar and non-ClinVar variant sets.

:::

<br>

::: {.panel-tabset}


```{r active_tab_class1}
#| echo: false
#| output: asis

if (missing_class_items[["class1"]][["ClinVar"]] == F | 
    (missing_class_items[["class1"]][["CPSR_ACMG"]] == T & 
     missing_class_items[["class1"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```

```{r class1_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class1']][['ClinVar']] == TRUE

cat("\n")
htmltools::br()

variants_class1_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "Benign") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", 
        "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", 
        "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class1_1 <- crosstalk::SharedData$new(variants_class1_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class1_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class1_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class1_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class1_1, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class1_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class1_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class1_1, ~CLINVAR_CONFLICTED),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), 
                             variants_class1_1, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class1_1,
  escape = F,
  extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[5],
        "', 'color': '#fff'});"),
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class1}
#| echo: false
#| output: asis

if (missing_class_items[["class1"]][["ClinVar"]] == T & 
    missing_class_items[["class1"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```

```{r class1_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class1']][['CPSR_ACMG']] == TRUE

cat("\n")
htmltools::br()

variants_class1_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "Benign") |>
  head(dt_max_rows) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )

variants_class1_2 <- crosstalk::SharedData$new(variants_class1_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class1_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class1_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class1_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class1_2, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG/AMP criteria codes)", variants_class1_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class1_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class1_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class1_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      paste0(
        "$(this.api().table().header()).css({'background-color':'",
        pcgrr::color_palette$pathogenicity$values[5],
        "', 'color': '#fff'});"),
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

:::

:::
