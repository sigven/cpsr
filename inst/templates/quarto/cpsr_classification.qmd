
## Variant classification

```{r prepare_classified_variant_data}
#| echo: false
#| output: asis
#| eval: true

dtable_pageLength <- 6
dtable_scrollY <- "700px"

show_class_filters <- list()
missing_class_items <- list()
tot_variants <- list()
#disp <- list()
callset_cpg <- 
  cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf
for (c in c("class1", "class2", "class3", "class4", "class5")) {
  path_level <- "VUS"
  if(c == "class1"){
    path_level = "Benign"
  }
  if(c == "class2"){
    path_level = "Likely_Benign"
  }
  if(c == "class4"){
    path_level = "Likely_Pathogenic"
  }
  if(c == "class5"){
    path_level = "Pathogenic"
  }
  show_class_filters[[c]] <- list()
  missing_class_items[[c]] <- list()
  tot_variants[[c]] <- list()
  for (m in c("CPSR_ACMG", "ClinVar")) {
    tot_variants[[c]][[m]] <- 0
    show_class_filters[[c]][[m]] <- F
    missing_class_items[[c]][[m]] <- T
    if (NROW(callset_cpg[callset_cpg$CPSR_CLASSIFICATION_SOURCE == m & 
                         callset_cpg$FINAL_CLASSIFICATION == path_level,]) > 0) {
      tot_variants[[c]][[m]] <- 
        NROW(callset_cpg[callset_cpg$CPSR_CLASSIFICATION_SOURCE == m & 
                         callset_cpg$FINAL_CLASSIFICATION == path_level,])
    }
    if (tot_variants[[c]][[m]] > 0) {
      show_class_filters[[c]][[m]] <- T
      missing_class_items[[c]][[m]] <- F
    }
  }
}

cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf <- 
  cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf |>
  dplyr::mutate(CONSEQUENCE = stringr::str_replace_all(CONSEQUENCE,"&", ", ")) |>
  dplyr::mutate(CDS_CHANGE = stringr::str_replace_all(CDS_CHANGE,"&", ", "))

tag_gnomad <- 
  cps_report[["settings"]][["conf"]][["variant_classification"]][["vcftag_gnomad_AF"]]
desc_gnomad <- 
  cps_report[["settings"]][["conf"]][["variant_classification"]][["popdesc_gnomad"]]
formula_gnomad <- as.formula(paste0("~", rlang::sym(tag_gnomad)))
```

<br>

::: {.panel-tabset}

### Pathogenic

<br>

   *  A total of __N = `r tot_variants[['class5']][['ClinVar']]`__ variants are registered with a <i>Pathogenic</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
   *  A total of __N = `r tot_variants[['class5']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>Pathogenic</i> clinical significance by CPSR (refined ACMG criteria - based on population frequency and variant effect).

::: {.callout-note}
Variants displayed here constitute the top 2000 variants for each of the ClinVar and non-ClinVar variant sets (due to display limitations with client-side tables)
:::


<br><br>

::: {.panel-tabset}

```{r active_tab_class5}
#| echo: false
#| output: asis

if (missing_class_items[["class5"]][["ClinVar"]] == F | 
    (missing_class_items[["class5"]][["CPSR_ACMG"]] == T & 
     missing_class_items[["class5"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```


```{r class5_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class5']][['ClinVar']]

cat("\n")
htmltools::br()


variants_class5_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "Pathogenic") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class5_1 <- crosstalk::SharedData$new(variants_class5_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class5_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class5_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class5_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class5_1, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class5_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class5_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class5_1, ~CLINVAR_CONFLICTED),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class5_1, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class5_1,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#9E0142', 'color': '#fff'});",
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class5}
#| echo: false
#| output: asis

if (missing_class_items[["class5"]][["ClinVar"]] == T & 
    missing_class_items[["class5"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```


```{r class5_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class5']][['CPSR_ACMG']]

variants_class5_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "Pathogenic") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )


variants_class5_2 <- crosstalk::SharedData$new(variants_class5_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class5_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class5_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class5_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class5_2, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG criteria codes)", variants_class5_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class5_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class5_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class5_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    # scrollY = dtable_scrollY,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#9E0142', 'color': '#fff'});",
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

:::

### Likely Pathogenic

<br>

*  A total of __N = `r tot_variants[['class4']][['ClinVar']]`__ variants are recorded with a <i>Likely Pathogenic</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
*  A total of __N = `r tot_variants[['class4']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>Likely Pathogenic</i> clinical significance by CPSR (refined ACMG criteria - based on population frequency and variant effect).

::: {.callout-note}
Variants displayed here constitute the top 2000 variants for each of the ClinVar and non-ClinVar variant sets (due to display limitations with client-side tables)
:::

<br><br>

::: {.panel-tabset}

```{r active_tab_class4}
#| echo: false
#| output: asis

if (missing_class_items[["class4"]][["ClinVar"]] == F | 
    (missing_class_items[["class4"]][["CPSR_ACMG"]] == T & 
     missing_class_items[["class4"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```

```{r class4_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class4']][['ClinVar']]

cat("\n")
htmltools::br()

variants_class4_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "Likely_Pathogenic") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", 
        "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", 
        "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class4_1 <- crosstalk::SharedData$new(variants_class4_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class4_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class4_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class4_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class4_1, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class4_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class4_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class4_1, ~CLINVAR_CONFLICTED),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class4_1, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class4_1,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    # scrollY = dtable_scrollY,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#D53E4F', 'color': '#fff'});",
      "}"
    )
  )
)
htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class4}
#| echo: false
#| output: asis

if (missing_class_items[["class4"]][["ClinVar"]] == T & 
    missing_class_items[["class4"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```

```{r class4_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class4']][['CPSR_ACMG']]

cat("\n")
htmltools::br()

variants_class4_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "Likely_Pathogenic") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )

variants_class4_2 <- crosstalk::SharedData$new(variants_class4_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class4_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class4_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class4_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class4_2, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG criteria codes)", variants_class4_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class4_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class4_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class4_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#D53E4F', 'color': '#fff'});",
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

:::

### Variants of Uncertain Significance (VUS)</b>

<br>

*  A total of __N = `r tot_variants[['class3']][['ClinVar']]`__ variants are recorded with a <i>VUS</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
*  A total of __N = `r tot_variants[['class3']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>VUS</i> clinical significance by CPSR (refined ACMG criteria - based on population frequency and variant effect).

::: {.callout-note}
Variants displayed here constitute the top 2000 variants for each of the ClinVar and non-ClinVar variant sets (due to display limitations with client-side tables)
:::

<br><br>

::: {.panel-tabset}

```{r active_tab_class3}
#| echo: false
#| output: asis

if (missing_class_items[["class3"]][["ClinVar"]] == F | 
    (missing_class_items[["class3"]][["CPSR_ACMG"]] == T & 
     missing_class_items[["class3"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```

```{r class3_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class3']][['ClinVar']]

cat("\n")
htmltools::br()

variants_class3_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "VUS") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class3_1 <- crosstalk::SharedData$new(variants_class3_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class3_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class3_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class3_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class3_1, ~SYMBOL),
    crosstalk::filter_slider("GERP_SCORE", "Genomic conservation score (GERP)", 
                             variants_class3_1, ~GERP_SCORE,
      min = -12.3, max = 6.17, ticks = T
    ),
    crosstalk::filter_slider(
      tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), 
      variants_class3_1, formula_gnomad, sep = "", ticks = F)
  ),
  list(
    crosstalk::filter_select("miRNA_TARGET_HIT", "miRNA target gain/loss", variants_class3_1, ~miRNA_TARGET_HIT),
    crosstalk::filter_select("TF_BINDING_SITE_VARIANT", "TF binding site alteration", variants_class3_1, ~TF_BINDING_SITE_VARIANT),
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class3_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class3_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class3_1, ~CLINVAR_CONFLICTED)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class3_1,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#000000', 'color': '#fff'});",
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class3}
#| echo: false
#| output: asis

if (missing_class_items[["class3"]][["ClinVar"]] == T & missing_class_items[["class3"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```


```{r vus_caution_note}
#| echo: false
#| output: asis
#| include: !expr show_class_filters[['class3']][['CPSR_ACMG']]

htmltools::br()

cat('\n::: {.callout-important}\nNon-ClinVar variants with a CPSR pathogenicity score of 2.0 (maximum score for VUS in CPSR) represent the most challenging collection of variants when it comes to classification. Based on calibration of classification score thresholds with high-confident ClinVar variants, we discovered a heterogeneous mix of _Likely Pathogenic_, _Pathogenic_, and _VUS_ variants that were all attributed with this score. Henceforth, we recommend that these variants should be prioritized for careful examination, and any such cases are <mark style="background-color:#ff7518; font-weight:bold; color:black">conveniently higlighted</mark> in the table below.\n\n:::')

htmltools::br()
```


```{r class3_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class3']][['CPSR_ACMG']]

cat("\n")
htmltools::br()

variants_class3_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "VUS") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )

variants_class3_2 <- crosstalk::SharedData$new(variants_class3_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class3_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class3_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class3_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class3_2, ~SYMBOL),
    crosstalk::filter_slider("GERP_SCORE", "Genomic conservation score (GERP)", variants_class3_2, ~GERP_SCORE,
      min = -12.3, max = 6.17, ticks = T
    )
  ),
  list(
    crosstalk::filter_select("miRNA_TARGET_HIT", "miRNA target gain/loss", variants_class3_2, ~miRNA_TARGET_HIT),
    crosstalk::filter_select("TF_BINDING_SITE_VARIANT", "TF binding site alteration", variants_class3_2, ~TF_BINDING_SITE_VARIANT),
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG criteria codes)", variants_class3_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class3_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class3_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class3_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#000000', 'color': '#fff'});",
      "}"
    )
  )
) |>
  DT::formatStyle(
    color = "black",
    columns = "SYMBOL",
    valueColumns = "CPSR_PATHOGENICITY_SCORE",
    backgroundColor = DT::styleEqual(
      c(-1.0, -0.5, 0, 0.5, 1.0, 1.5, 2.0),
      c("#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#ff7518")
    )
  )

htmltools::br()
htmltools::br()
htmltools::br()
```

:::

### Likely Benign

<br>

*  A total of __N = `r tot_variants[['class2']][['ClinVar']]`__ variants are recorded with a <i>Likely Benign</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
*  A total of __N = `r tot_variants[['class2']][['CPSR_ACMG']]`__ <i><b>non-ClinVar</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>Likely Benign</i> clinical significance by CPSR (refined ACMG criteria - based on population frequency and variant effect).

::: {.callout-note}
Variants displayed here constitute the top 2000 variants for each of the ClinVar and non-ClinVar variant sets (due to display limitations with client-side tables)
:::

<br><br>

::: {.panel-tabset}


```{r active_tab_class2}
#| echo: false
#| output: asis

if (missing_class_items[["class2"]][["ClinVar"]] == F | 
    (missing_class_items[["class2"]][["CPSR_ACMG"]] == T &
     missing_class_items[["class2"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```

```{r class2_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class2']][['ClinVar']]

cat("\n")
htmltools::br()

variants_class2_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "Likely_Benign") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", 
        "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", 
        "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class2_1 <- crosstalk::SharedData$new(variants_class2_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class2_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class2_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class2_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class2_1, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class2_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class2_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class2_1, ~CLINVAR_CONFLICTED),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class2_1, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class2_1,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#78C679', 'color': '#fff'});",
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class2}
#| echo: false
#| output: asis

if (missing_class_items[["class2"]][["ClinVar"]] == T & 
    missing_class_items[["class2"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```

```{r class2_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class2']][['CPSR_ACMG']]

cat("\n")
htmltools::br()

variants_class2_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "Likely_Benign") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )

variants_class2_2 <- crosstalk::SharedData$new(
  variants_class2_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class2_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class2_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class2_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class2_2, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG criteria codes)", variants_class2_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class2_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class2_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class2_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#78C679', 'color': '#fff'});",
      "}"
    )
  )
)
htmltools::br()
htmltools::br()
htmltools::br()
```

:::

### Benign

<br>

*  A total of __N = `r tot_variants[['class1']][['ClinVar']]`__ variants are recorded with a <i>Benign</i> clinical significance in the [ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/) database.
*  A total of __N = `r tot_variants[['class1']][['CPSR_ACMG']]`__ <i><b>Other</b></i> variants (i.e. not submitted to/recorded in ClinVar) are classified with a <i>Benign</i> clinical significance by CPSR (refined ACMG criteria - based on population frequency and variant effect).

::: {.callout-note}
Variants displayed here constitute the top 2000 variants for each of the ClinVar and non-ClinVar variant sets (due to display limitations with client-side tables)
:::

<br><br>

::: {.panel-tabset}


```{r active_tab_class1}
#| echo: false
#| output: asis

if (missing_class_items[["class1"]][["ClinVar"]] == F | 
    (missing_class_items[["class1"]][["CPSR_ACMG"]] == T & 
     missing_class_items[["class1"]][["ClinVar"]] == T)) {
  cat("")
  cat("#### ClinVar")
  cat("")
} else {
  cat("")
  cat("#### ClinVar")
  cat("")
}
```

```{r class1_cpsr_clinvar}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class1']][['ClinVar']]

cat("\n")
htmltools::br()

variants_class1_clinvar <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "ClinVar" & 
      CLINVAR_CLASSIFICATION == "Benign") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CPSR_CLASSIFICATION", "CPSR_PATHOGENICITY_SCORE",
        "CPSR_CLASSIFICATION_DOC", "CPSR_CLASSIFICATION_CODE")
    )
  )

variants_class1_1 <- crosstalk::SharedData$new(variants_class1_clinvar)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class1_1, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class1_1, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class1_1, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class1_1, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CLINVAR_PHENOTYPE", "ClinVar phenotype(s)", variants_class1_1, ~CLINVAR_PHENOTYPE),
    crosstalk::filter_slider("CLINVAR_REVIEW_STATUS_STARS", "ClinVar review status stars", variants_class1_1, ~CLINVAR_REVIEW_STATUS_STARS, min = 0, max = 4, step = 1, ticks = T),
    crosstalk::filter_select("CLINVAR_CONFLICTED", "ClinVar conflicting interpretations", variants_class1_1, ~CLINVAR_CONFLICTED),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), 
                             variants_class1_1, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class1_1,
  escape = F,
  extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete = DT::JS(
      "function(settings, json) {",
      "$(this.api().table().header()).css({'background-color':'#077009', 'color': '#fff'});",
      "}"
    )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

```{r active2_tab_class1}
#| echo: false
#| output: asis

if (missing_class_items[["class1"]][["ClinVar"]] == T & 
    missing_class_items[["class1"]][["CPSR_ACMG"]] == F) {
  cat("")
  cat("#### Non-ClinVar {.active}")
  cat("")
} else {
  cat("")
  cat("#### Non-ClinVar")
  cat("")
}
```

```{r class1_cpsr_other}
#| echo: false
#| output: asis
#| eval: !expr show_class_filters[['class1']][['CPSR_ACMG']]

cat("\n")
htmltools::br()

variants_class1_other <-
  dplyr::filter(
    cps_report[["content"]][["snv_indel"]]$callset$variant_display$cpg_non_sf, 
    CPSR_CLASSIFICATION_SOURCE == "CPSR_ACMG" & 
      CPSR_CLASSIFICATION == "Benign") |>
  head(2000) |>
  dplyr::select(
    -dplyr::any_of(
      c("CLINVAR", 
        "CLINVAR_REVIEW_STATUS_STARS", 
        "CLINVAR_VARIANT_ORIGIN",
        "CLINVAR_CLASSIFICATION", 
        "CLINVAR_CONFLICTED", 
        "CLINVAR_PHENOTYPE")
    )
  )

variants_class1_2 <- crosstalk::SharedData$new(variants_class1_other)
crosstalk::bscols(
  list(
    crosstalk::filter_select("CONSEQUENCE", "Consequence", variants_class1_2, ~CONSEQUENCE),
    crosstalk::filter_checkbox("GENOTYPE", "Genotype", variants_class1_2, ~GENOTYPE),
    if(cps_report$settings$conf$sample_properties$dp_detected == 1){
      crosstalk::filter_slider("DP_CONTROL", "Variant sequencing depth", 
                             variants_class1_2, ~DP_CONTROL)
    },
    crosstalk::filter_select("SYMBOL", "Gene", variants_class1_2, ~SYMBOL)
  ),
  list(
    crosstalk::filter_select("CPSR_CLASSIFICATION_CODE", "CPSR classification (ACMG criteria codes)", variants_class1_2, ~CPSR_CLASSIFICATION_CODE),
    crosstalk::filter_slider("CPSR_PATHOGENICITY_SCORE", "CPSR pathogenicity score", variants_class1_2, ~CPSR_PATHOGENICITY_SCORE, step = 0.5, ticks = T),
    crosstalk::filter_slider(tag_gnomad, paste0("MAF gnomAD (", desc_gnomad, ")"), variants_class1_2, formula_gnomad, sep = "", ticks = F)
  )
)



htmltools::br()
htmltools::br()

DT::datatable(variants_class1_2,
  escape = F, extensions = c("Buttons", "Responsive"),
  options = list(
    pageLength = dtable_pageLength,
    scrollCollapse = T,
    buttons = c("csv", "excel"),
    dom = "Bfrtip",
    initComplete =
      DT::JS(
        "function(settings, json) {",
        "$(this.api().table().header()).css({'background-color':'#077009', 'color': '#fff'});",
        "}"
      )
  )
)

htmltools::br()
htmltools::br()
htmltools::br()
```

:::

:::
